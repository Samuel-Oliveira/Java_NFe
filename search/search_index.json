{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio","text":"<p>Biblioteca Java para consumo do WebService de NFe/NFCe</p>"},{"location":"#duvidas-sugestoes-ou-consultoria","title":"D\u00favidas, Sugest\u00f5es ou Consultoria","text":""},{"location":"#entre-no-discord-do-projeto-httpsdiscordggzxpqnav","title":"Entre no Discord do Projeto: https://discord.gg/ZXpqnaV","text":""},{"location":"#gostou-do-projeto-de-sua-colaboracao-pelo-pix-01713390108","title":"Gostou do Projeto? D\u00ea sua colabora\u00e7\u00e3o pelo Pix: 01713390108","text":"<p>Para Iniciar :  - Caso use Libs baixe o java-nfe-4.00.25.jar e o adicione \u00e0s bibliotecas de Seu Projeto.</p> <ul> <li> <p>Baixe o Schemas.rar e extraia na sua M\u00e1quina.</p> </li> <li> <p>Maven : <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;br.com.swconsultoria&lt;/groupId&gt;\n    &lt;artifactId&gt;java-nfe&lt;/artifactId&gt;\n    &lt;version&gt;4.00.25&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre></p> </li> <li> <p>Gradle : <pre><code>repositories {\n    maven { \n        url = \"https://oss.sonatype.org/content/repositories/snapshots\" \n    }\n}\ndependencies {\n    implementation \"br.com.swconsultoria:java-nfe:4.00.25\"\n}\n</code></pre></p> </li> </ul>"},{"location":"tutorial/baixar-documento/","title":"Baixar Documento (DistDfe)","text":"<p>Fun\u00e7\u00e3o para consulta/baixa de NF-e na Sefaz.</p>"},{"location":"tutorial/baixar-documento/#exemplo-de-consulta-via-nsu-e-chave-de-acesso","title":"Exemplo de consulta via NSU e Chave de Acesso:","text":"DistribuicaoDFeTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.*;\nimport br.com.swconsultoria.nfe.schema.retdistdfeint.RetDistDFeInt;\nimport br.com.swconsultoria.nfe.schema.retdistdfeint.RetDistDFeInt.LoteDistDFeInt.DocZip;\nimport br.com.swconsultoria.nfe.util.XmlNfeUtil;\n\nimport java.util.List;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class DistribuicaoDFeTeste {\n\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            URI uri = Objects.requireNonNull(DistribuicaoDFeTeste.class.getClassLoader().getResource(\"arquivo-certificado.pfx\")).toURI();            \n            Certificado certificado = CertificadoService.certificadoPfx(Paths.get(file.toURI()).toString(), \"senha-do-seu-certificado\");\n            ConfiguracoesNfe configuracoesNfe = ConfiguracoesNfe.criarConfiguracoes(EstadosEnum.PR, AmbienteEnum.HOMOLOGACAO, certificado, \"\");\n\n            // Informe o CNPJ Do Destinatario (Deve ser o Mesmo do Certificado)\n            String cnpj = \"XXX\";\n\n            RetDistDFeInt retorno;\n\n            // Para Consulta Via CHAVE\n            // String chave = \"35170843283811001202550010046314601229130549\";\n            // retorno = Nfe.distribuicaoDfe(configuracoesNfe, PessoaEnum.JURIDICA, cnpj, ConsultaDFeEnum.CHAVE, chave);\n\n            // Para Consulta Via NSU\n            String nsu = \"000000000000000\";\n            retorno = Nfe.distribuicaoDfe(config, PessoaEnum.JURIDICA, cnpj, ConsultaDFeEnum.NSU, nsu);\n\n            if (StatusEnum.DOC_LOCALIZADO_PARA_DESTINATARIO.getCodigo().equals(retorno.getCStat())) {\n                System.out.println();\n                System.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n                System.out.println(\"# NSU Atual: \" + retorno.getUltNSU());\n                System.out.println(\"# Max NSU: \" + retorno.getMaxNSU());\n                System.out.println(\"# Max NSU: \" + retorno.getMaxNSU());\n\n                //Aqui Recebe a Lista De XML (No Maximo 50 por Consulta)\n                List&lt;DocZip&gt; listaDoc = retorno.getLoteDistDFeInt().getDocZip();\n                for (DocZip docZip : listaDoc) {\n                    System.out.println();\n                    System.out.println(\"# Schema: \" + docZip.getSchema());\n                    switch (docZip.getSchema()) {\n                        case \"resNFe_v1.01.xsd\":\n                            System.out.println(\"# Este \u00e9 o XML em resumo, deve ser feito a Manifesta\u00e7\u00e3o para o Objeter o XML Completo.\");\n                            break;\n                        case \"procNFe_v4.00.xsd\":\n                            System.out.println(\"# XML Completo.\");\n                            break;\n                        case \"procEventoNFe_v1.00.xsd\":\n                            System.out.println(\"# XML Evento.\");\n                            break;\n                    }\n                    //Transforma o GZip em XML\n                    String xml = XmlNfeUtil.gZipToXml(docZip.getValue());\n                    System.out.println(\"# XML: \" + xml);\n                }\n            } else {\n                System.out.println();\n                System.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n            }\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \"+e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/cancelamento/","title":"Cancelamento","text":"<p>Fun\u00e7\u00e3o para Cancelar a NFe/NFCe.</p>"},{"location":"tutorial/cancelamento/#cancelar-nfenfce","title":"Cancelar NFe/NFCe.","text":"CancelarTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.schema.envEventoCancNFe.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envEventoCancNFe.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.CancelamentoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\nimport java.time.LocalDateTime;\n\n/**\n * @author Samuel Oliveira\n */\npublic class CancelarTeste {\n\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n            //Para isso Foi criado o Objeto Cancela\n            Evento cancela = new Evento();\n            //Informe a chave da Nota a ser Cancelada\n            cancela.setChave(\"XXX\");\n            //Informe o protocolo da Nota a ser Cancelada\n            cancela.setProtocolo(\"XXX\");\n            //Informe o CNPJ do emitente\n            cancela.setCnpj(\"XXX\");\n            //Informe o Motivo do Cancelamento\n            cancela.setMotivo(\"Teste de Cancelamento\");\n            //Informe a data do Cancelamento\n            cancela.setDataEvento(LocalDateTime.now());\n\n            //Monta o Evento de Cancelamento\n            TEnvEvento enviEvento = CancelamentoUtil.montaCancelamento(cancela, config);\n\n            //Envia o Evento de Cancelamento\n            TRetEnvEvento retorno = Nfe.cancelarNfe(config, enviEvento, true, DocumentoEnum.NFE);\n\n            //Valida o Retorno do Cancelamento\n            RetornoUtil.validaCancelamento(retorno);\n\n            //Resultado\n            System.out.println();\n            retorno.getRetEvento().forEach( resultado -&gt; {\n                System.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\n                System.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\n                System.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n            });\n\n            //Cria ProcEvento de Cacnelamento\n            String proc = CancelamentoUtil.criaProcEventoCancelamento(config, enviEvento, retorno.getRetEvento().get(0));\n            System.out.println();\n            System.out.println(\"# ProcEvento : \" + proc);\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \"+e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/cancelamento/#cancelamento-substituicao-nfce","title":"Cancelamento Substitui\u00e7\u00e3o (NFCe)","text":"CancelarTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.schema.envEventoCancSubst.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envEventoCancSubst.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.CancelamentoSubstituicaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\nimport java.time.LocalDateTime;\n\n/**\n * @author Samuel Oliveira\n */\npublic class CancelarSubstituicaoTeste {\n\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n            //Para isso Foi criado o Objeto Cancela\n            Evento cancela = new Evento();\n            //Informe a chave da Nota a ser Cancelada\n            cancela.setChave(\"XXX\");\n            //Informe a chave da Nota a Substituta\n            cancela.setChaveSusbstituta(\"XXX\");\n            //Informe o protocolo da Nota a ser Cancelada\n            cancela.setProtocolo(\"XXX\");\n            //Informe o CNPJ do emitente\n            cancela.setCnpj(\"XXX\");\n            //Informe o Motivo do Cancelamento\n            cancela.setMotivo(\"Teste de Cancelamento\");\n            //Informe a data do Cancelamento\n            cancela.setDataEvento(LocalDateTime.now());\n\n            //Monta o Evento de Cancelamento\n            TEnvEvento enviEvento = CancelamentoSubstituicaoUtil.montaCancelamento(cancela, config);\n\n            //Envia o Evento de Cancelamento\n            TRetEnvEvento retorno = Nfe.cancelarSubstituicaoNfe(config, enviEvento, true);\n\n            //Valida o Retorno do Cancelamento\n            RetornoUtil.validaCancelamentoSubstituicao(retorno);\n\n            //Resultado\n            System.out.println();\n            retorno.getRetEvento().forEach( resultado -&gt; {\n                System.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\n                System.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\n                System.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n            });\n\n            //Cria ProcEvento de Cacnelamento\n            String proc = CancelamentoSubstituicaoUtil.criaProcEventoCancelamento(config, enviEvento, retorno.getRetEvento().get(0));\n            System.out.println();\n            System.out.println(\"# ProcEvento : \" + proc);\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \"+e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/cce/","title":"Carta de Corre\u00e7\u00e3o Eletr\u00f4nica","text":"<p>Fun\u00e7\u00e3o para Gerar a Carta De Corre\u00e7\u00e3o Eletr\u00f4nica.</p>"},{"location":"tutorial/cce/#envio","title":"Envio","text":"CartaCorrecaoTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.schema.envcce.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envcce.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.CartaCorrecaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\nimport java.time.LocalDateTime;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class CartaCorrecaoTeste {\n\n    public static void main(String[] args) {\n\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n            //Para isso Foi criado o Objeto Cancela\n            Evento cce = new Evento();\n            //Informe a chave da Nota a ser feita a CArta de Corre\u00e7\u00e3o\n            cce.setChave(\"XXX\");\n            //Informe o CNPJ do emitente\n            cce.setCnpj(\"XXX\");\n            //Informe o Texto da Carta de Corre\u00e7\u00e3o\n            cce.setMotivo(\"Teste de Carta de Corre\u00e7\u00e3o\");\n            //Informe a data da Carta de Corre\u00e7\u00e3o\n            cce.setDataEvento(LocalDateTime.now());\n            //Informe a sequencia do Evento\n            cce.setSequencia(1);\n\n            // Monta o Evento\n            TEnvEvento envEvento = CartaCorrecaoUtil.montaCCe(cce,config);\n\n            //Envia a CCe\n            TRetEnvEvento retorno = Nfe.cce(config, envEvento, true);\n\n            //Valida o Retorno do Carta de Corre\u00e7\u00e3o\n            RetornoUtil.validaCartaCorrecao(retorno);\n\n            //Resultado\n            System.out.println();\n            retorno.getRetEvento().forEach( resultado -&gt; {\n                System.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\n                System.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\n                System.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n            });\n\n            //Cria ProcEvento da CCe\n            String proc = CartaCorrecaoUtil.criaProcEventoCCe(config, envEvento, retorno);\n            System.out.println();\n            System.out.println(\"# ProcEvento : \" + proc);\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(e.getMessage());\n        }\n\n    }\n\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/configuracoes/","title":"Configura\u00e7\u00f5es","text":"<p>Para executar qualquer fun\u00e7\u00e3o NFe/NFCe, deve-se inicializar as Configura\u00e7\u00e3o.</p>"},{"location":"tutorial/configuracoes/#certificado-digital","title":"Certificado Digital","text":"<pre><code>import br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;\n\npublic ConfiguracoesNfe iniciaConfigura\u00e7\u00f5es() throws NfeException {\n    Certificado certificado = // Obter certificado (1)\n\n    return ConfiguracoesNfe.criarConfiguracoes(\n        EstadosEnum.GO, // (2)\n        AmbienteEnum.HOMOLOGACAO, // (3)\n        certificado, \n        \"C:\\\\SRA\\\\Nfe\\\\Schemas\" // (4)\n    );\n}\n</code></pre> <ol> <li>Para obter o c\u00f3digo de uso do certificado, voc\u00ea deve acessar em Java_Certificado</li> <li>Obtendo estado a partir de String EstadosEnum.valueOf(\"GO\")</li> <li>Obtendo ambiente a partir de String AmbienteEnum.getByCodigo(\"2\")</li> <li>Caminho da pasta que se encontra os Schemas Xsd</li> </ol>"},{"location":"tutorial/configuracoes/#proxy","title":"Proxy","text":"<p>Para Habilitar o Proxy, ao iniciar as configura\u00e7\u00f5es Adicione as Seguintes Linhas:</p> <pre><code>public static ConfiguracoesIniciaisNfe iniciaConfigura\u00e7\u00f5es() throws NfeException {\n    // Certificado Arquivo, Parametros: -Caminho Certificado, - Senha\n    Certificado certificado = CertificadoService.certificadoPfx(\"c:/certificado/certificado.pfx\", \"123456\");\n\n    ConfiguracoesIniciaisNfe config = ConfiguracoesIniciaisNfe.iniciaConfiguracoes(Estados.GO , ConstantesUtil.AMBIENTE.HOMOLOGACAO,certificado, \"C:\\\\SRA\\\\Nfe\\\\Schemas\");\n\n    String ip = \"192.168.0.1\";\n    String porta = \"3128\";\n    String usuario = \"\";\n    String senha = \"\";\n\n    config.setProxy(ip, porta, usuario , senha);\n\n    return config;\n}\n</code></pre>"},{"location":"tutorial/configuracoes/#contingencia-scan","title":"Conting\u00eancia Scan","text":"<p>Para Trabalhar com Conting\u00eancia Scan, ap\u00f3s iniciar as Configura\u00e7\u00f5es Set a Propriedade como True:</p> <pre><code>public static ConfiguracoesIniciaisNfe iniciaConfigura\u00e7\u00f5es() throws NfeException {\n    // Certificado Arquivo, Parametros: -Caminho Certificado, - Senha\n    Certificado certificado = CertificadoService.certificadoPfx(\n        \"c:/certificado/certificado.pfx\", \n        \"123456\"\n    );\n\n    ConfiguracoesIniciaisNfe config = ConfiguracoesIniciaisNfe.iniciaConfiguracoes(\n        Estados.GO, \n        ConstantesUtil.AMBIENTE.HOMOLOGACAO,\n        certificado, \n        \"C:\\\\SRA\\\\Nfe\\\\Schemas\"\n    );\n\n    config.setContigenciaSCAN(true);\n\n    return config;\n}\n</code></pre>"},{"location":"tutorial/consulta-cadastro/","title":"Consulta Cadastro","text":"<p>Fun\u00e7\u00e3o para Consultar o Cadastro do Contribuinte na Sefaz.</p>"},{"location":"tutorial/consulta-cadastro/#consulta-cadastro_1","title":"Consulta Cadastro","text":"ConsultaCadastroTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.PessoaEnum;\nimport br.com.swconsultoria.nfe.schema.retConsCad.TRetConsCad;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class ConsultaCadastroTeste {\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Envia a Consulta\n            TRetConsCad retorno = Nfe.consultaCadastro(config, PessoaEnum.JURIDICA, \"XXX\", EstadosEnum.GO);\n\n            //Valida o Retorno da Consulta Cadastro\n            RetornoUtil.validaConsultaCadastro(retorno);\n\n            //Resultado\n            System.out.println();\n            System.out.println(\"# Status: \" + retorno.getInfCons().getCStat() + \" - \" + retorno.getInfCons().getXMotivo());\n            System.out.println();\n            retorno.getInfCons().getInfCad().forEach( cadastro -&gt; {\n                System.out.println(\"# Raz\u00e3o Social: \" + cadastro.getXNome());\n                System.out.println(\"# Cnpj: \" + cadastro.getCNPJ());\n                System.out.println(\"# Ie: \" + cadastro.getIE());\n            });\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/consulta-situacao/","title":"Consulta Situa\u00e7\u00e3o","text":"<p>Fun\u00e7\u00e3o para consultar a Situa\u00e7\u00e3o da NF-e na Sefaz.</p> ConsultaXmlTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.schema_4.retConsSitNFe.TRetConsSitNFe;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class ConsultaXmlTeste {\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n            //Informe a chave a ser Consultada\n            String chave = \"52190310732644000128550010000125531000125532\";\n\n            //Efetua a consulta\n            TRetConsSitNFe retorno = Nfe.consultaXml(config, chave, DocumentoEnum.NFE);\n\n            //Resultado\n            System.out.println();\n            System.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/envio-epec/","title":"Envio Epec","text":""},{"location":"tutorial/envio-epec/#envio","title":"Envio","text":"EpecTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.dom.EventoEpec;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.schema.envEpec.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envEpec.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.EpecUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\nimport java.time.LocalDateTime;\n\n/**\n * @author Samuel Oliveira\n */\npublic class EpecTeste {\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n            //Para isso Foi criado o Objeto Epec\n            Evento epec = new Evento();\n            //Informe a chave da Epec\n            epec.setChave(\"52190310732644000128550010000125491000125491\");\n            //Informe o CNPJ do emitente\n            epec.setCnpj(\"10732644000128\");\n            //Informe a data do EPEC\n            epec.setDataEvento(LocalDateTime.now());\n            //Preenche os Dados do Evento EPEC\n            EventoEpec eventoEpec = new EventoEpec();\n            eventoEpec.setCnpjDestinatario(\"X\");\n            eventoEpec.setvST(\"X\");\n            eventoEpec.setvNF(\"X\");\n            eventoEpec.setvICMS(\"X\");\n            eventoEpec.setTipoNF(\"X\");\n            eventoEpec.setIeEmitente(\"X\");\n            eventoEpec.setIeDestinatario(\"X\");\n            eventoEpec.setEstadoDestinatario(EstadosEnum.GO);\n            epec.setEventoEpec(eventoEpec);\n\n            //Monta o Evento de Cancelamento\n            TEnvEvento enviEvento = EpecUtil.montaEpec(epec,config);\n\n            //Envia Evento EPEC\n            TRetEnvEvento retorno = Nfe.enviarEpec(config, enviEvento, true);\n\n            //Valida o Retorno do Cancelamento\n            RetornoUtil.validaEpec(retorno);\n\n            //Resultado\n            System.out.println();\n            retorno.getRetEvento().forEach( resultado -&gt; {\n                System.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\n                System.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\n                System.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n            });\n            //Cria ProcEvento de Cacnelamento\n            String proc = EpecUtil.criaProcEventoEpec(config, enviEvento, retorno);\n            System.out.println();\n            System.out.println(\"# ProcEvento : \" + proc);\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \"+e.getMessage());\n        }\n    }\n}\n</code></pre>"},{"location":"tutorial/envio/","title":"Envio NF-e/NFC-e","text":""},{"location":"tutorial/envio/#envio-nf-e-sincrono","title":"Envio NF-e (S\u00edncrono)","text":"EnvioNfeTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.StatusEnum;\nimport br.com.swconsultoria.nfe.exception.NfeException;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.ICMS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Prod;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Total.ICMSTot;\nimport br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TRetConsReciNFe;\nimport br.com.swconsultoria.nfe.util.ChaveUtil;\nimport br.com.swconsultoria.nfe.util.ConstantesUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport br.com.swconsultoria.nfe.util.XmlNfeUtil;\n\nimport javax.xml.bind.JAXBElement;\nimport javax.xml.namespace.QName;\nimport java.time.LocalDateTime;\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class EnvioNfeTeste {\n\n    public static void main(String[] args) {\n\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Informe o Numero da NFe\n            int numeroNfe = XXX;\n            //Informe o CNPJ do Emitente da NFe\n            String cnpj = \"XXX\";\n            //Informe a data de Emissao da NFe\n            LocalDateTime dataEmissao = LocalDateTime.now();\n            //Informe o cnf da NFe com 8 digitos\n            String cnf = ChaveUtil.completarComZerosAEsquerda(String.valueOf(numeroNfe), 8);\n            //Informe o modelo da NFe\n            String modelo = DocumentoEnum.NFE.getModelo();\n            //Informe a Serie da NFe\n            int serie = 1;\n            //Informe o tipo de Emissao da NFe\n            String tipoEmissao = \"1\";\n\n            // MontaChave a NFe\n            ChaveUtil chaveUtil = new ChaveUtil(config.getEstado(), cnpj, modelo, serie, numeroNfe, tipoEmissao, cnf, dataEmissao);\n            String chave = chaveUtil.getChaveNF();\n            String cdv = chaveUtil.getDigitoVerificador();\n\n            InfNFe infNFe = new InfNFe();\n            infNFe.setId(chave);\n            infNFe.setVersao(ConstantesUtil.VERSAO.NFE);\n\n            //Preenche IDE\n            infNFe.setIde(preencheIde(config, cnf, numeroNfe, tipoEmissao, modelo, serie, cdv, dataEmissao));\n\n            //Preenche Emitente\n            infNFe.setEmit(preencheEmitente(config, cnpj));\n\n            //Preenche o Destinatario\n            infNFe.setDest(preencheDestinatario());\n\n            //Preenche os dados do Produto da Nfe e adiciona a Lista\n            infNFe.getDet().addAll(preencheDet());\n\n            //Preenche totais da NFe\n            infNFe.setTotal(preencheTotal());\n\n            //Preenche os dados de Transporte\n            infNFe.setTransp(preencheTransporte());\n\n            // Preenche dados Pagamento\n            infNFe.setPag(preenchePag());\n\n            TNFe nfe = new TNFe();\n            nfe.setInfNFe(infNFe);\n\n            // Monta EnviNfe\n            TEnviNFe enviNFe = new TEnviNFe();\n            enviNFe.setVersao(ConstantesUtil.VERSAO.NFE);\n            enviNFe.setIdLote(\"1\");\n            enviNFe.setIndSinc(\"1\");\n            enviNFe.getNFe().add(nfe);\n\n            // Monta e Assina o XML\n            enviNFe = Nfe.montaNfe(config, enviNFe, true);\n\n            // Envia a Nfe para a Sefaz\n            TRetEnviNFe retorno = Nfe.enviarNfe(config, enviNFe, DocumentoEnum.NFE);\n\n            //Valida se o Retorno \u00e9 Assincrono\n            if (RetornoUtil.isRetornoAssincrono(retorno)) {\n                //Pega o Recibo\n                String recibo = retorno.getInfRec().getNRec();\n                int tentativa = 0;\n                TRetConsReciNFe retornoNfe = null;\n\n                //Define Numero de tentativas que ir\u00e1 tentar a Consulta\n                while (tentativa &lt; 15) {\n                    retornoNfe = Nfe.consultaRecibo(config, recibo, DocumentoEnum.NFE);\n                    if (retornoNfe.getCStat().equals(StatusEnum.LOTE_EM_PROCESSAMENTO.getCodigo())) {\n                        System.out.println(\"INFO: Lote Em Processamento, vai tentar novamente apos 1 Segundo.\");\n                        Thread.sleep(1000);\n                        tentativa++;\n                    } else {\n                        break;\n                    }\n                }\n\n                RetornoUtil.validaAssincrono(retornoNfe);\n                System.out.println();\n                System.out.println(\"# Status: \" + retornoNfe.getProtNFe().get(0).getInfProt().getCStat() + \" - \" + retornoNfe.getProtNFe().get(0).getInfProt().getXMotivo());\n                System.out.println(\"# Protocolo: \" + retornoNfe.getProtNFe().get(0).getInfProt().getNProt());\n                System.out.println(\"# XML Final: \" + XmlNfeUtil.criaNfeProc(enviNFe, retornoNfe.getProtNFe().get(0)));\n\n            } else {\n                //Se for else o Retorno \u00e9 Sincrono\n\n                //Valida Retorno Sincrono\n                RetornoUtil.validaSincrono(retorno);\n                System.out.println();\n                System.out.println(\"# Status: \" + retorno.getProtNFe().getInfProt().getCStat()  + \" - \" + retorno.getProtNFe().getInfProt().getXMotivo());\n                System.out.println(\"# Protocolo: \" + retorno.getProtNFe().getInfProt().getNProt());\n                System.out.println(\"# Xml Final :\" + XmlNfeUtil.criaNfeProc(enviNFe, retorno.getProtNFe()));\n            }\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \" + e.getMessage());\n        }\n\n    }\n\n    /**\n     * Preenche o IDE\n     * @param config\n     * @param cnf\n     * @param numeroNfe\n     * @param tipoEmissao\n     * @param cDv\n     * @param dataEmissao\n     * @return\n     * @throws NfeException\n     */\n    private static Ide preencheIde(ConfiguracoesNfe config, String cnf, int numeroNfe, String tipoEmissao, String modelo, int serie, String cDv, LocalDateTime dataEmissao) throws NfeException {\n        Ide ide = new Ide();\n        ide.setCUF(config.getEstado().getCodigoIbge());\n        ide.setCNF(cnf);\n        ide.setNatOp(\"NOTA FISCAL CONSUMIDOR ELETRONICA\");\n        ide.setMod(modelo);\n        ide.setSerie(String.valueOf(serie));\n\n        ide.setNNF(String.valueOf(numeroNfe));\n        ide.setDhEmi(XmlNfeUtil.dataNfe(dataEmissao));\n        ide.setTpNF(\"1\");\n        ide.setIdDest(\"1\");\n        ide.setCMunFG(\"5219753\");\n        ide.setTpImp(\"1\");\n        ide.setTpEmis(tipoEmissao);\n        ide.setCDV(cDv);\n        ide.setTpAmb(config.getAmbiente().getCodigo());\n        ide.setFinNFe(\"1\");\n        ide.setIndFinal(\"1\");\n        ide.setIndPres(\"1\");\n        ide.setProcEmi(\"0\");\n        ide.setVerProc(\"1.0\");\n\n        return ide;\n    }\n\n    /**\n     * Preenche o Emitente da Nfe\n     * @param config\n     * @param cnpj\n     * @return\n     */\n    private static Emit preencheEmitente(ConfiguracoesNfe config, String cnpj) {\n        Emit emit = new Emit();\n        emit.setCNPJ(cnpj);\n        emit.setXNome(\"XXXX\");\n\n        TEnderEmi enderEmit = new TEnderEmi();\n        enderEmit.setXLgr(\"AV SANTO ANTONIO &amp; cia\");\n        enderEmit.setNro(\"0\");\n        enderEmit.setXCpl(\"QD 17 LT 01-02-03\");\n        enderEmit.setXBairro(\"PQ STO ANTONIO\");\n        enderEmit.setCMun(\"5219753\");\n        enderEmit.setXMun(\"SANTO ANTONIO DO DESCOBERTO\");\n        enderEmit.setUF(TUfEmi.valueOf(config.getEstado().toString()));\n        enderEmit.setCEP(\"72900000\");\n        enderEmit.setCPais(\"1058\");\n        enderEmit.setXPais(\"Brasil\");\n        enderEmit.setFone(\"6233215175\");\n        emit.setEnderEmit(enderEmit);\n\n        emit.setIE(\"XXX\");\n        emit.setCRT(\"3\");\n\n        return emit;\n    }\n\n    /**\n     * Preenche o Destinatario da NFe\n     * @return\n     */\n    private static Dest preencheDestinatario() {\n        Dest dest = new Dest();\n        dest.setCNPJ(\"XXX\");\n        dest.setXNome(\"NF-E EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\n\n        TEndereco enderDest = new TEndereco();\n        enderDest.setXLgr(\"Rua: Teste\");\n        enderDest.setNro(\"0\");\n        enderDest.setXBairro(\"TESTE\");\n        enderDest.setCMun(\"4109708\");\n        enderDest.setXMun(\"IBAITI\");\n        enderDest.setUF(TUf.valueOf(\"PR\"));\n        enderDest.setCEP(\"84900000\");\n        enderDest.setCPais(\"1058\");\n        enderDest.setXPais(\"Brasil\");\n        enderDest.setFone(\"4845454545\");\n        dest.setEnderDest(enderDest);\n        dest.setEmail(\"teste@test\");\n        dest.setIndIEDest(\"9\");\n        return dest;\n    }\n\n    /**\n     * Preenche Det Nfe\n     */\n    private static List&lt;Det&gt; preencheDet() {\n\n        //O Preenchimento deve ser feito por produto, Ent\u00e3o deve ocorrer uma LIsta\n        Det det = new Det();\n        //O numero do Item deve seguir uma sequencia\n        det.setNItem(\"1\");\n\n        // Preenche dados do Produto\n        det.setProd(preencheProduto());\n\n        //Preenche dados do Imposto\n        det.setImposto(preencheImposto());\n\n        //Retorna a Lista de Det\n        return Collections.singletonList(det);\n    }\n\n    /**\n     * Preenche dados do Produto\n     * @return\n     */\n    private static Prod preencheProduto() {\n        Prod prod = new Prod();\n        prod.setCProd(\"7898480650104\");\n        prod.setCEAN(\"7898480650104\");\n        prod.setXProd(\"NOTA FISCAL EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\n        prod.setNCM(\"27101932\");\n        prod.setCEST(\"0600500\");\n        prod.setIndEscala(\"S\");\n        prod.setCFOP(\"5405\");\n        prod.setUCom(\"UN\");\n        prod.setQCom(\"1.0000\");\n        prod.setVUnCom(\"13.0000\");\n        prod.setVProd(\"13.00\");\n        prod.setCEANTrib(\"7898480650104\");\n        prod.setUTrib(\"UN\");\n        prod.setQTrib(\"1.0000\");\n        prod.setVUnTrib(\"13.0000\");\n        prod.setIndTot(\"1\");\n\n        return prod;\n    }\n\n    /**\n     * Preenche dados do Imposto da Nfe\n     * @return\n     */\n    private static Imposto preencheImposto() {\n        Imposto imposto = new Imposto();\n\n        ICMS icms = new ICMS();\n\n        ICMS.ICMS00 icms00 = new ICMS.ICMS00();\n        icms00.setOrig(\"0\");\n        icms00.setCST(\"00\");\n        icms00.setModBC(\"0\");\n        icms00.setVBC(\"13.00\");\n        icms00.setPICMS(\"7.00\");\n        icms00.setVICMS(\"0.91\");\n\n        icms.setICMS00(icms00);\n\n        PIS pis = new PIS();\n        PISAliq pisAliq = new PISAliq();\n        pisAliq.setCST(\"01\");\n        pisAliq.setVBC(\"13.00\");\n        pisAliq.setPPIS(\"1.65\");\n        pisAliq.setVPIS(\"0.21\");\n        pis.setPISAliq(pisAliq);\n\n        COFINS cofins = new COFINS();\n        COFINSAliq cofinsAliq = new COFINSAliq();\n        cofinsAliq.setCST(\"01\");\n        cofinsAliq.setVBC(\"13.00\");\n        cofinsAliq.setPCOFINS(\"7.60\");\n        cofinsAliq.setVCOFINS(\"0.99\");\n        cofins.setCOFINSAliq(cofinsAliq);\n\n        imposto.getContent().add(new ObjectFactory().createTNFeInfNFeDetImpostoICMS(icms));\n        imposto.getContent().add(new ObjectFactory().createTNFeInfNFeDetImpostoPIS(pis));\n        imposto.getContent().add(new ObjectFactory().createTNFeInfNFeDetImpostoCOFINS(cofins));\n\n        return imposto;\n    }\n\n    /**\n     * Prenche Total NFe\n     * @return\n     */\n    private static Total preencheTotal() {\n        Total total = new Total();\n        ICMSTot icmstot = new ICMSTot();\n        icmstot.setVBC(\"13.00\");\n        icmstot.setVICMS(\"0.91\");\n        icmstot.setVICMSDeson(\"0.00\");\n        icmstot.setVFCP(\"0.00\");\n        icmstot.setVFCPST(\"0.00\");\n        icmstot.setVFCPSTRet(\"0.00\");\n        icmstot.setVBCST(\"0.00\");\n        icmstot.setVST(\"0.00\");\n        icmstot.setVProd(\"13.00\");\n        icmstot.setVFrete(\"0.00\");\n        icmstot.setVSeg(\"0.00\");\n        icmstot.setVDesc(\"0.00\");\n        icmstot.setVII(\"0.00\");\n        icmstot.setVIPI(\"0.00\");\n        icmstot.setVIPIDevol(\"0.00\");\n        icmstot.setVPIS(\"0.21\");\n        icmstot.setVCOFINS(\"0.99\");\n        icmstot.setVOutro(\"0.00\");\n        icmstot.setVNF(\"13.00\");\n        total.setICMSTot(icmstot);\n\n        return total;\n    }\n\n    /**\n     * Preenche Transporte\n     * @return\n     */\n    private static Transp preencheTransporte(){\n        Transp transp = new Transp();\n        transp.setModFrete(\"9\");\n        return transp;\n    }\n\n    /**\n     * Preenche dados Pagamento\n     * @return\n     */\n    private static Pag preenchePag() {\n        Pag pag = new Pag();\n        Pag.DetPag detPag = new Pag.DetPag();\n        detPag.setTPag(\"01\");\n        detPag.setVPag(\"13.00\");\n        pag.getDetPag().add(detPag);\n\n        return pag;\n    }\n\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/envio/#envio-nfc-e-sincrono","title":"Envio NFC-e (S\u00edncrono)","text":"EnvioNfeXmlTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.*;\nimport br.com.swconsultoria.nfe.exception.NfeException;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.ICMS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Prod;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Total.ICMSTot;\nimport br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TRetConsReciNFe;\nimport br.com.swconsultoria.nfe.util.*;\n\nimport javax.xml.bind.JAXBElement;\nimport javax.xml.namespace.QName;\nimport java.security.NoSuchAlgorithmException;\nimport java.time.LocalDateTime;\nimport java.util.Collections;\nimport java.util.List;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class EnvioNfceTeste {\n\n    public static void main(String[] args) {\n\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Informe o Numero da NFCe\n            int numeroNFCe = XXX;\n            //Informe o CNPJ do Emitente da NFCe\n            String cnpj = \"XXX\";\n            //Informe a data de Emissao da NFCe\n            LocalDateTime dataEmissao = LocalDateTime.now();\n            //Informe o cnf da NFCe com 8 digitos\n            String cnf = ChaveUtil.completarComZerosAEsquerda(String.valueOf(numeroNFCe), 8);\n            //Informe o modelo da NFCe\n            String modelo = DocumentoEnum.NFCE.getModelo();\n            //Informe a Serie da NFCe\n            int serie = 1;\n            //Informe o tipo de Emissao da NFCe\n            String tipoEmissao = \"1\";\n            //Informe o idToken\n            String idToken = \"XXX\";\n            //Informe o CSC da NFCe\n            String csc = \"XXX\";\n\n            // MontaChave a NFCe\n            ChaveUtil chaveUtil = new ChaveUtil(config.getEstado(), cnpj, modelo, serie, numeroNFCe, tipoEmissao, cnf, dataEmissao);\n            String chave = chaveUtil.getChaveNF();\n            String cdv = chaveUtil.getDigitoVerificador();\n\n            InfNFe infNFe = new InfNFe();\n            infNFe.setId(chave);\n            infNFe.setVersao(ConstantesUtil.VERSAO.NFE);\n\n            //Preenche IDE\n            infNFe.setIde(preencheIde(config, cnf, numeroNFCe, tipoEmissao, modelo, serie, cdv, dataEmissao));\n\n            //Preenche Emitente\n            infNFe.setEmit(preencheEmitente(config, cnpj));\n\n            //Preenche o Destinatario\n            infNFe.setDest(preencheDestinatario());\n\n            //Preenche os dados do Produto da NFCe e adiciona a Lista\n            infNFe.getDet().addAll(preencheDet());\n\n            //Preenche totais da NFCe\n            infNFe.setTotal(preencheTotal());\n\n            //Preenche os dados de Transporte\n            infNFe.setTransp(preencheTransporte());\n\n            // Preenche dados Pagamento\n            infNFe.setPag(preenchePag());\n\n            TNFe nfe = new TNFe();\n            nfe.setInfNFe(infNFe);\n\n            // Monta EnviNfe\n            TEnviNFe enviNFe = new TEnviNFe();\n            enviNFe.setVersao(ConstantesUtil.VERSAO.NFE);\n            enviNFe.setIdLote(\"1\");\n            enviNFe.setIndSinc(\"1\");\n            enviNFe.getNFe().add(nfe);\n\n            // Monta e Assina o XML\n            enviNFe = Nfe.montaNfe(config, enviNFe, true);\n\n            //Monta QRCode\n            String qrCode = preencheQRCode(enviNFe,config,idToken,csc);\n\n            TNFe.InfNFeSupl infNFeSupl = new TNFe.InfNFeSupl();\n            infNFeSupl.setQrCode(qrCode);\n            infNFeSupl.setUrlChave(WebServiceUtil.getUrl(config, DocumentoEnum.NFCE, ServicosEnum.URL_CONSULTANFCE));\n            enviNFe.getNFe().get(0).setInfNFeSupl(infNFeSupl);\n\n            // Envia a Nfe para a Sefaz\n            TRetEnviNFe retorno = Nfe.enviarNfe(config, enviNFe, DocumentoEnum.NFCE);\n\n            //Valida se o Retorno \u00e9 Assincrono\n            if (RetornoUtil.isRetornoAssincrono(retorno)) {\n                //Pega o Recibo\n                String recibo = retorno.getInfRec().getNRec();\n                int tentativa = 0;\n                TRetConsReciNFe retornoNfe = null;\n\n                //Define Numero de tentativas que ir\u00e1 tentar a Consulta\n                while (tentativa &lt; 15) {\n                    retornoNfe = Nfe.consultaRecibo(config, recibo, DocumentoEnum.NFE);\n                    if (retornoNfe.getCStat().equals(StatusEnum.LOTE_EM_PROCESSAMENTO.getCodigo())) {\n                        System.out.println(\"INFO: Lote Em Processamento, vai tentar novamente apos 1 Segundo.\");\n                        Thread.sleep(1000);\n                        tentativa++;\n                    } else {\n                        break;\n                    }\n                }\n\n                RetornoUtil.validaAssincrono(retornoNfe);\n                System.out.println();\n                System.out.println(\"# Status: \" + retornoNfe.getProtNFe().get(0).getInfProt().getCStat() + \" - \" + retornoNfe.getProtNFe().get(0).getInfProt().getXMotivo());\n                System.out.println(\"# Protocolo: \" + retornoNfe.getProtNFe().get(0).getInfProt().getNProt());\n                System.out.println(\"# XML Final: \" + XmlNfeUtil.criaNfeProc(enviNFe, retornoNfe.getProtNFe().get(0)));\n\n            } else {\n                //Se for else o Retorno \u00e9 Sincrono\n\n                //Valida Retorno Sincrono\n                RetornoUtil.validaSincrono(retorno);\n                System.out.println();\n                System.out.println(\"# Status: \" + retorno.getProtNFe().getInfProt().getCStat() + \" - \" + retorno.getProtNFe().getInfProt().getXMotivo());\n                System.out.println(\"# Protocolo: \" + retorno.getProtNFe().getInfProt().getNProt());\n                System.out.println(\"# Xml Final :\" + XmlNfeUtil.criaNfeProc(enviNFe, retorno.getProtNFe()));\n            }\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \" + e.getMessage());\n        }\n\n    }\n\n    /**\n     * Preenche o IDE\n     * @param config\n     * @param cnf\n     * @param numeroNFCe\n     * @param tipoEmissao\n     * @param cDv\n     * @param dataEmissao\n     * @return\n     * @throws NfeException\n     */\n    private static Ide preencheIde(ConfiguracoesNfe config, String cnf, int numeroNFCe, String tipoEmissao, String modelo, int serie, String cDv, LocalDateTime dataEmissao) throws NfeException {\n        Ide ide = new Ide();\n        ide.setCUF(config.getEstado().getCodigoIbge());\n        ide.setCNF(cnf);\n        ide.setNatOp(\"NOTA FISCAL CONSUMIDOR ELETRONICA\");\n        ide.setMod(modelo);\n        ide.setSerie(String.valueOf(serie));\n\n        ide.setNNF(String.valueOf(numeroNFCe));\n        ide.setDhEmi(XmlNfeUtil.dataNfe(dataEmissao));\n        ide.setTpNF(\"1\");\n        ide.setIdDest(\"1\");\n        ide.setCMunFG(\"5219753\");\n        ide.setTpImp(\"4\");\n        ide.setTpEmis(tipoEmissao);\n        ide.setCDV(cDv);\n        ide.setTpAmb(config.getAmbiente().getCodigo());\n        ide.setFinNFe(\"1\");\n        ide.setIndFinal(\"1\");\n        ide.setIndPres(\"1\");\n        ide.setProcEmi(\"0\");\n        ide.setVerProc(\"1.0\");\n\n        return ide;\n    }\n\n    /**\n     * Preenche o Emitente da NFCe\n     * @param config\n     * @param cnpj\n     * @return\n     */\n    private static Emit preencheEmitente(ConfiguracoesNfe config, String cnpj) {\n        Emit emit = new Emit();\n        emit.setCNPJ(cnpj);\n        emit.setXNome(\"XXX\");\n\n        TEnderEmi enderEmit = new TEnderEmi();\n        enderEmit.setXLgr(\"AV SANTO ANTONIO e cia\");\n        enderEmit.setNro(\"0\");\n        enderEmit.setXCpl(\"QD 17 LT 01-02-03\");\n        enderEmit.setXBairro(\"PQ STO ANTONIO\");\n        enderEmit.setCMun(\"5219753\");\n        enderEmit.setXMun(\"SANTO ANTONIO DO DESCOBERTO\");\n        enderEmit.setUF(TUfEmi.valueOf(config.getEstado().toString()));\n        enderEmit.setCEP(\"72900000\");\n        enderEmit.setCPais(\"1058\");\n        enderEmit.setXPais(\"Brasil\");\n        enderEmit.setFone(\"6233215175\");\n        emit.setEnderEmit(enderEmit);\n\n        emit.setIE(\"XXX\");\n        emit.setCRT(\"3\");\n\n        return emit;\n    }\n\n    /**\n     * Preenche o Destinatario da NFCe\n     * @return\n     */\n    private static Dest preencheDestinatario() {\n        Dest dest = new Dest();\n        dest.setCNPJ(\"XXX\");\n        dest.setXNome(\"NF-E EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\n\n        TEndereco enderDest = new TEndereco();\n        enderDest.setXLgr(\"Rua: Teste\");\n        enderDest.setNro(\"0\");\n        enderDest.setXBairro(\"TESTE\");\n        enderDest.setCMun(\"4109708\");\n        enderDest.setXMun(\"IBAITI\");\n        enderDest.setUF(TUf.valueOf(\"PR\"));\n        enderDest.setCEP(\"84900000\");\n        enderDest.setCPais(\"1058\");\n        enderDest.setXPais(\"Brasil\");\n        enderDest.setFone(\"4845454545\");\n        dest.setEnderDest(enderDest);\n        dest.setEmail(\"teste@test\");\n        dest.setIndIEDest(\"9\");\n        return dest;\n    }\n\n    /**\n     * Preenche Det NFCe\n     */\n    private static List&lt;Det&gt; preencheDet() {\n\n        //O Preenchimento deve ser feito por produto, Ent\u00e3o deve ocorrer uma LIsta\n        Det det = new Det();\n        //O numero do Item deve seguir uma sequencia\n        det.setNItem(\"1\");\n\n        // Preenche dados do Produto\n        det.setProd(preencheProduto());\n\n        //Preenche dados do Imposto\n        det.setImposto(preencheImposto());\n\n        //Retorna a Lista de Det\n        return Collections.singletonList(det);\n    }\n\n    /**\n     * Preenche dados do Produto\n     * @return\n     */\n    private static Prod preencheProduto() {\n        Prod prod = new Prod();\n        prod.setCProd(\"7898480650104\");\n        prod.setCEAN(\"7898480650104\");\n        prod.setXProd(\"NOTA FISCAL EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\n        prod.setNCM(\"27101932\");\n        prod.setCEST(\"0600500\");\n        prod.setIndEscala(\"S\");\n        prod.setCFOP(\"5102\");\n        prod.setUCom(\"UN\");\n        prod.setQCom(\"1.0000\");\n        prod.setVUnCom(\"13.0000\");\n        prod.setVProd(\"13.00\");\n        prod.setCEANTrib(\"7898480650104\");\n        prod.setUTrib(\"UN\");\n        prod.setQTrib(\"1.0000\");\n        prod.setVUnTrib(\"13.0000\");\n        prod.setIndTot(\"1\");\n\n        return prod;\n    }\n\n    /**\n     * Preenche dados do Imposto da NFCe\n     * @return\n     */\n    private static Imposto preencheImposto() {\n        Imposto imposto = new Imposto();\n\n        ICMS icms = new ICMS();\n\n        ICMS.ICMS00 icms00 = new ICMS.ICMS00();\n        icms00.setOrig(\"0\");\n        icms00.setCST(\"00\");\n        icms00.setModBC(\"0\");\n        icms00.setVBC(\"13.00\");\n        icms00.setPICMS(\"7.00\");\n        icms00.setVICMS(\"0.91\");\n\n        icms.setICMS00(icms00);\n\n\n        PIS pis = new PIS();\n        PISAliq pisAliq = new PISAliq();\n        pisAliq.setCST(\"01\");\n        pisAliq.setVBC(\"13.00\");\n        pisAliq.setPPIS(\"1.65\");\n        pisAliq.setVPIS(\"0.21\");\n        pis.setPISAliq(pisAliq);\n\n        COFINS cofins = new COFINS();\n        COFINSAliq cofinsAliq = new COFINSAliq();\n        cofinsAliq.setCST(\"01\");\n        cofinsAliq.setVBC(\"13.00\");\n        cofinsAliq.setPCOFINS(\"7.60\");\n        cofinsAliq.setVCOFINS(\"0.99\");\n        cofins.setCOFINSAliq(cofinsAliq);\n\n        JAXBElement&lt;ICMS&gt; icmsElement = new JAXBElement&lt;ICMS&gt;(new QName(\"ICMS\"), ICMS.class, icms);\n        imposto.getContent().add(icmsElement);\n\n        JAXBElement&lt;PIS&gt; pisElement = new JAXBElement&lt;PIS&gt;(new QName(\"PIS\"), PIS.class, pis);\n        imposto.getContent().add(pisElement);\n\n        JAXBElement&lt;COFINS&gt; cofinsElement = new JAXBElement&lt;COFINS&gt;(new QName(\"COFINS\"), COFINS.class, cofins);\n        imposto.getContent().add(cofinsElement);\n\n        return imposto;\n    }\n\n    /**\n     * Prenche Total NFCe\n     * @return\n     */\n    private static Total preencheTotal() {\n        Total total = new Total();\n        ICMSTot icmstot = new ICMSTot();\n        icmstot.setVBC(\"13.00\");\n        icmstot.setVICMS(\"0.91\");\n        icmstot.setVICMSDeson(\"0.00\");\n        icmstot.setVFCP(\"0.00\");\n        icmstot.setVFCPST(\"0.00\");\n        icmstot.setVFCPSTRet(\"0.00\");\n        icmstot.setVBCST(\"0.00\");\n        icmstot.setVST(\"0.00\");\n        icmstot.setVProd(\"13.00\");\n        icmstot.setVFrete(\"0.00\");\n        icmstot.setVSeg(\"0.00\");\n        icmstot.setVDesc(\"0.00\");\n        icmstot.setVII(\"0.00\");\n        icmstot.setVIPI(\"0.00\");\n        icmstot.setVIPIDevol(\"0.00\");\n        icmstot.setVPIS(\"0.21\");\n        icmstot.setVCOFINS(\"0.99\");\n        icmstot.setVOutro(\"0.00\");\n        icmstot.setVNF(\"13.00\");\n        total.setICMSTot(icmstot);\n\n        return total;\n    }\n\n    /**\n     * Preenche Transporte\n     * @return\n     */\n    private static Transp preencheTransporte() {\n        Transp transp = new Transp();\n        transp.setModFrete(\"9\");\n        return transp;\n    }\n\n    /**\n     * Preenche dados Pagamento\n     * @return\n     */\n    private static Pag preenchePag() {\n        Pag pag = new Pag();\n        Pag.DetPag detPag = new Pag.DetPag();\n        detPag.setTPag(\"01\");\n        detPag.setVPag(\"13.00\");\n        pag.getDetPag().add(detPag);\n\n        return pag;\n    }\n\n    /**\n     * Preenche QRCode\n     * @param enviNFe\n     * @param config\n     * @param idToken\n     * @param csc\n     * @return\n     * @throws NfeException\n     * @throws NoSuchAlgorithmException\n     */\n    private static String preencheQRCode(TEnviNFe enviNFe, ConfiguracoesNfe config, String idToken, String csc) throws NfeException, NoSuchAlgorithmException {\n\n        //QRCODE EMISAO ONLINE\n        return NFCeUtil.getCodeQRCode(\n                enviNFe.getNFe().get(0).getInfNFe().getId().substring(3),\n                config.getAmbiente().getCodigo(),\n                idToken,\n                csc,\n                WebServiceUtil.getUrl(config,DocumentoEnum.NFCE, ServicosEnum.URL_QRCODE));\n\n        //QRCODE EMISSAO OFFLINE\n//        return NFCeUtil.getCodeQRCodeContingencia(\n//                enviNFe.getNFe().get(0).getInfNFe().getId().substring(3),\n//                config.getAmbiente().getCodigo(),\n//                enviNFe.getNFe().get(0).getInfNFe().getIde().getDhEmi(),\n//                enviNFe.getNFe().get(0).getInfNFe().getTotal().getICMSTot().getVNF(),\n//                Base64.getEncoder().encodeToString(enviNFe.getNFe().get(0).getSignature().getSignedInfo().getReference().getDigestValue()),\n//                idToken,\n//                csc,\n//                WebServiceUtil.getUrl(config, DocumentoEnum.NFCE, ServicosEnum.URL_QRCODE));\n    }\n\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/envio/#envio-nf-e-com-arquivo-xml","title":"Envio NF-e com arquivo XML","text":"EnvioNfeXmlTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.StatusEnum;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TEnviNFe;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TRetEnviNFe;\nimport br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TRetConsReciNFe;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport br.com.swconsultoria.nfe.util.XmlNfeUtil;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class EnvioNfeXmlTeste {\n\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            String caminhoXML = \"d:/teste/nfe.xml\";\n\n            // Le Xml do Arquivo\n            String xml = XmlNfeUtil.leXml(caminhoXML);\n            TEnviNFe enviNFe = XmlNfeUtil.xmlToObject(xml, TEnviNFe.class);\n\n            // Monta e Assina o XML\n            enviNFe = Nfe.montaNfe(config, enviNFe, true);\n\n            // Envia a Nfe para a Sefaz\n            TRetEnviNFe retorno = Nfe.enviarNfe(config, enviNFe, DocumentoEnum.NFE);\n\n            //Valida se o Retorno \u00e9 Assincrono\n            if (RetornoUtil.isRetornoAssincrono(retorno)) {\n                //Pega o Recibo\n                String recibo = retorno.getInfRec().getNRec();\n                int tentativa = 0;\n                TRetConsReciNFe retornoNfe = null;\n\n                //Define Numero de tentativas que ir\u00e1 tentar a Consulta\n                while (tentativa &lt; 15) {\n                    retornoNfe = Nfe.consultaRecibo(config, recibo, DocumentoEnum.NFE);\n                    if (retornoNfe.getCStat().equals(StatusEnum.LOTE_EM_PROCESSAMENTO.getCodigo())) {\n                        System.out.println(\"INFO: Lote Em Processamento, vai tentar novamente apos 1 Segundo.\");\n                        Thread.sleep(1000);\n                        tentativa++;\n                    } else {\n                        break;\n                    }\n                }\n\n                RetornoUtil.validaAssincrono(retornoNfe);\n                System.out.println();\n                System.out.println(\"# Status: \" + retornoNfe.getProtNFe().get(0).getInfProt().getCStat() + \" - \" + retornoNfe.getProtNFe().get(0).getInfProt().getXMotivo());\n                System.out.println(\"# Protocolo: \" + retornoNfe.getProtNFe().get(0).getInfProt().getNProt());\n                System.out.println(\"# XML Final: \" + XmlNfeUtil.criaNfeProc(enviNFe, retornoNfe.getProtNFe().get(0)));\n\n            } else {\n                //Se for else o Retorno \u00e9 Sincrono\n\n                //Valida Retorno Sincrono\n                RetornoUtil.validaSincrono(retorno);\n                System.out.println();\n                System.out.println(\"# Status: \" + retorno.getProtNFe().getInfProt().getCStat() + \" - \" + retorno.getProtNFe().getInfProt().getXMotivo());\n                System.out.println(\"# Protocolo: \" + retorno.getProtNFe().getInfProt().getNProt());\n                System.out.println(\"# Xml Final : \" + XmlNfeUtil.criaNfeProc(enviNFe, retorno.getProtNFe()));\n            }\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \" + e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/inutilizacao/","title":"Inutiliza\u00e7\u00e3o","text":"<p>Fun\u00e7\u00e3o para Inutilizar faixa de n\u00fameros da NF-e.</p>"},{"location":"tutorial/inutilizacao/#enviar-evento-de-inutilizacao","title":"Enviar evento de Inutiliza\u00e7\u00e3o","text":"InutilizarTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.schema_4.inutNFe.TInutNFe;\nimport br.com.swconsultoria.nfe.schema_4.inutNFe.TRetInutNFe;\nimport br.com.swconsultoria.nfe.util.InutilizacaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\nimport java.time.LocalDateTime;\n\n/**\n * @author Samuel Oliveira\n *\n */\npublic class InutilizarTeste {\n\n    public static void main(String[] args) {\n\n        try {\n\n            /// Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = ConfiguracaoTeste.iniciaConfiguracoes(EstadosEnum.GO, AmbienteEnum.HOMOLOGACAO);\n\n            //Informe o CNPJ do emitente\n            String cnpj = \"XXX\";\n            //Informe a serie\n            int serie = 1;\n            //Informe a numeracao Inicial\n            int numeroInicial = XXX;\n            //Informe a numeracao Final\n            int numeroFinal = XXX;\n            //Informe a Justificativa da Inutilizacao\n            String justificativa = \"Teste de Inutiliza\u00e7\u00e3o\";\n            //Informe a data do Cancelamento\n            LocalDateTime dataCancelamento = LocalDateTime.now();\n\n            //MOnta Inutiliza\u00e7\u00e3o\n            TInutNFe inutNFe = InutilizacaoUtil.montaInutilizacao(DocumentoEnum.NFE,cnpj,serie,numeroInicial,numeroFinal,justificativa,dataCancelamento,config);\n\n            //Envia Inutiliza\u00e7\u00e3o\n            TRetInutNFe retorno = Nfe.inutilizacao(config,inutNFe, DocumentoEnum.NFE,true);\n\n            //Valida o Retorno da Inutiliza\u00e7\u00e3o\n            RetornoUtil.validaInutilizacao(retorno);\n\n            //Resultado\n            System.out.println();\n            System.out.println(\"# Status: \" + retorno.getInfInut().getCStat() + \" - \" + retorno.getInfInut().getXMotivo());\n            System.out.println(\"# Protocolo: \" + retorno.getInfInut().getNProt());\n\n            //Cria ProcEvento da Inutiliza\u00e7\u00e3o\n            String proc = InutilizacaoUtil.criaProcInutilizacao(config,inutNFe, retorno);\n            System.out.println();\n            System.out.println(\"# ProcInutilizacao : \" + proc);\n\n        } catch (Exception e) {\n            System.err.println(e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/manifestacao/","title":"Manifesta\u00e7\u00e3o","text":"<p>Fun\u00e7\u00e3o para Manifestar a NF-e Recebida na Sefaz.</p>"},{"location":"tutorial/manifestacao/#enviar-evento-de-manifestacao","title":"Enviar evento de Manifesta\u00e7\u00e3o","text":"ManifestacaoTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.dom.enuns.ManifestacaoEnum;\nimport br.com.swconsultoria.nfe.schema.envConfRecebto.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envConfRecebto.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.ManifestacaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n\nimport java.time.LocalDateTime;\n\n/**\n * @author Samuel Oliveira\n */\npublic class ManifestacaoTeste {\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Agora o evento pode aceitar uma lista de Manifest\u00e7\u00f5es para envio em Lote.\n            //Para isso Foi criado o Objeto Manifestada\n            Evento manifesta = new Evento();\n            //Informe a chave da Nota a ser Manifestada\n            manifesta.setChave(\"ZZZ\");\n            //Informe o CNPJ do emitente\n            manifesta.setCnpj(\"XXX\");\n            //Caso o Tipo de manifesta\u00e7\u00e3o seja OPERA\u00c7\u00c2O N\u00e3o REALIZADA, Informe o Motivo do Manifestacao\n            manifesta.setMotivo(\"Teste Opera\u00e7\u00e3o N\u00e3o Realizada\");\n            //Informe a data do Manifestacao\n            manifesta.setDataEvento(LocalDateTime.now());\n            //Informe o Tipo da Manifesta\u00e7\u00e3o\n            manifesta.setTipoManifestacao(ManifestacaoEnum.CIENCIA_DA_OPERACAO);\n\n            //Monta o Evento de Manifesta\u00e7\u00e3o\n            TEnvEvento enviEvento = ManifestacaoUtil.montaManifestacao(manifesta, config);\n\n            //Envia o Evento de Manifesta\u00e7\u00e3o\n            TRetEnvEvento retorno = Nfe.manifestacao(config, enviEvento, true);\n\n            //Valida o Retorno do Cancelamento\n            RetornoUtil.validaManifestacao(retorno);\n\n            //Resultado\n            System.out.println();\n            retorno.getRetEvento().forEach( resultado -&gt; {\n                System.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\n                System.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\n                System.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n            });\n\n            //Cria ProcEvento de Manifestacao\n            String proc = ManifestacaoUtil.criaProcEventoManifestacao(config, enviEvento, retorno.getRetEvento().get(0));\n            System.out.println();\n            System.out.println(\"# ProcEvento : \" + proc);\n\n        } catch (Exception e) {\n            System.err.println();\n            System.err.println(\"# Erro: \"+e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/status-servico/","title":"Status de Servi\u00e7o","text":"<p>Fun\u00e7\u00e3o para consultar o Status de Servi\u00e7o Da Sefaz.</p> StatusServicoTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.schema_4.retConsStatServ.TRetConsStatServ;\n\n/**\n * @author Samuel Oliveira\n */\npublic class StatusServicoTeste {\n    public static void main(String[] args) {\n        try {\n            // Inicia As Configura\u00e7\u00f5es (1)\n            ConfiguracoesNfe config = Config.iniciaConfiguracoes();\n\n            //Efetua Consulta\n            TRetConsStatServ retorno = Nfe.statusServico(config, DocumentoEnum.NFE);\n\n            //Resultado\n            System.out.println();\n            System.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n        } catch (Exception e) {\n            System.err.println(\"# Erro: \"+e.getMessage());\n        }\n    }\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"}]}